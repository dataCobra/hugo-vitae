{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
{{- if .Site.Params.nofeedSections -}}
{{- $pages = where $pctx.RegularPages "Type" "not in" .Site.Params.nofeedSections -}}
{{- else -}}
{{- $pages = $pctx.RegularPages -}}
{{- end -}}
{{- else -}}
{{- if .Site.Params.nofeedSections -}}
{{- $pages = where $pctx.Pages "Type" "not in" .Site.Params.nofeedSections -}}
{{- else -}}
{{- $pages = $pctx.Pages -}}
{{- end -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}</title>
		<link>{{ .Permalink }}</link>
		<description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ $baseurl := urls.Parse .Site.BaseURL }}{{ $baseurl.Host }}</description>
		<generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}
		<language>{{.}}</language>{{end}}{{ with .Site.Author.email }}
		<managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}
		<webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}
		<copyright>{{ . | markdownify | plainify }}</copyright>{{end}}{{ if not .Date.IsZero }}
		<lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
		{{ with .OutputFormats.Get "RSS" }}
		{{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
		{{ end }}
		{{ range $pages }}
		{{- if ne .Params.nofeed true -}}
		<item>
			<title>{{ .Title }}</title>
			<link>{{ .Permalink }}</link>
			<pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
			{{ with .Site.Author.email }}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{end}}
			<guid>{{ .Permalink }}</guid>
			<description>
			{{ if isset .Params "description" }}
				{{ .Description }}
			{{ else }}
				{{ .Plain | htmlUnescape | safeHTML | truncate 120 }}
			{{ end }}
			</description>
		</item>
		{{ end -}}
		{{ end }}
	</channel>
</rss>
